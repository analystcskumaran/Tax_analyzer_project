name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      DJANGO_SETTINGS_MODULE: backend.django_app.settings

    steps:
      # 1. Checkout repo
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      # 3. Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest requests

      # 4. Ensure dataset exists
      - name: Prepare dataset
        run: |
          mkdir -p data/raw
          # Option 1: Commit CSV to repo
          # cp data/raw/tax_data.csv data/raw/tax_data.csv
          # Option 2: Download CSV dynamically
          wget -O data/raw/tax_data.csv https://your-dataset-url.com/tax_data.csv

      # 5. Preprocess dataset
      - name: Preprocess dataset
        run: python scripts/data_pipeline.py

      # 6. Train ML model
      - name: Train ML model
        run: python models/train_model.py

      # 7. Start Flask API in background
      - name: Start Flask API
        run: python backend/flask_api/app.py &

      # 8. Run Django tests
      - name: Run Django tests
        run: python manage.py test

      # 9. Run all tests with pytest
      - name: Run all tests
        run: pytest tests

      # 10. Deploy to Heroku (main branch only)
      - name: Deploy to Heroku
        if: github.ref == 'refs/heads/main'
        run: |
          echo ${{ secrets.HEROKU_API_KEY }} | heroku auth:token
          heroku create tax-analyzer-app || echo "App already exists"
          git push heroku main
